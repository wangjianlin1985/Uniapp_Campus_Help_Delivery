<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.study.system.dao.SysConfigDao">
    
    <resultMap type="SysConfig" id="SysConfigResult">
    	<id     property="configId"      column="config_id"      />
        <result property="configName"    column="config_name"    />
        <result property="configKey"     column="config_key"     />
        <result property="configValue"   column="config_value"   />
        <result property="configType"    column="config_type"    />
        <result property="remark"        column="remark"    />
    </resultMap>
    
    <sql id="selectConfigVo">
        select 
            config_id, 
            config_name, 
            config_key, 
            config_value, 
            config_type,
            remark 
		from sys_config  
    </sql>
    
    
    <select id="getById" parameterType="SysConfig" resultMap="SysConfigResult">
        <include refid="selectConfigVo"/>
        where config_id = #{configId}
    </select>
    
    <select id="get" parameterType="SysConfig" resultMap="SysConfigResult">
    	<include refid="selectConfigVo"/>
    	where config_key = #{configKey} and delete_flag = #{deleteFlag}
    </select>
    
    <select id="getConfigByKey" parameterType="SysConfig" resultType="String">
        select config_value from sys_config
        where config_key = #{configKey} and delete_flag = #{deleteFlag}
    </select>
    
    
    <select id="list" parameterType="SysConfig" resultMap="SysConfigResult">
        <include refid="selectConfigVo"/>
        <where>
            delete_flag = #{deleteFlag}
			<if test="configName != null and configName != ''">
				AND config_name like concat('%', #{configName}, '%')
			</if>
			<if test="configType != null and configType != ''">
				AND config_type = #{configType}
			</if>
			<if test="configKey != null and configKey != ''">
				AND config_key like concat('%', #{configKey}, '%')
			</if>
			<if test="params.beginTime != null and params.beginTime != ''"><!-- 开始时间检索 -->
				and date_format(create_time,'%y%m%d') &gt;= date_format(#{params.beginTime},'%y%m%d')
			</if>
			<if test="params.endTime != null and params.endTime != ''"><!-- 结束时间检索 -->
				and date_format(create_time,'%y%m%d') &lt;= date_format(#{params.endTime},'%y%m%d')
			</if>
		</where>
    </select>
    
    
    <select id="checkConfigKeyUnique" parameterType="SysConfig" resultMap="SysConfigResult">
        <include refid="selectConfigVo"/>
        where config_key = #{configKey} and delete_flag = #{deleteFlag}
    </select>
    
    <insert id="add" parameterType="SysConfig">
        insert into sys_config (
			<if test="configName != null and configName != '' ">config_name,</if>
			<if test="configKey != null and configKey != '' ">config_key,</if>
			<if test="configValue != null and configValue != '' ">config_value,</if>
			<if test="configType != null and configType != '' ">config_type,</if>
			<if test="createBy != null and createBy != ''">create_by,</if>
			<if test="remark != null and remark != ''">remark,</if>
 			create_time
        )values(
			<if test="configName != null and configName != ''">#{configName},</if>
			<if test="configKey != null and configKey != ''">#{configKey},</if>
			<if test="configValue != null and configValue != ''">#{configValue},</if>
			<if test="configType != null and configType != ''">#{configType},</if>
			<if test="createBy != null and createBy != ''">#{createBy},</if>
			<if test="remark != null and remark != ''">#{remark},</if>
 			sysdate()
		)
    </insert>
	 
    <update id="update" parameterType="SysConfig">
        update sys_config 
        <set>
            <if test="configName != null and configName != ''">config_name = #{configName},</if>
            <if test="configKey != null and configKey != ''">config_key = #{configKey},</if>
            <if test="configValue != null and configValue != ''">config_value = #{configValue},</if>
            <if test="configType != null and configType != ''">config_type = #{configType},</if>
            <if test="updateBy != null and updateBy != ''">update_by = #{updateBy},</if>
            <if test="remark != null">remark = #{remark},</if>
 			update_time = sysdate()
        </set>
        where config_id = #{configId}
    </update>
	
    <delete id="delete" parameterType="SysConfig">
        update 
            sys_config 
        set 
            delete_flag = #{deleteFlag},
            delete_by = #{deleteBy},
            delete_time = sysdate() 
        where config_id = #{configId} 
    </delete>
    
</mapper>